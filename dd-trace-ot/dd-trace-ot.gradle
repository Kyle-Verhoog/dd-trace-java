plugins {
  id "com.github.johnrengelman.shadow" version "5.2.0"
  id "me.champeau.gradle.jmh" version "0.5.0"
}

description = 'dd-trace-ot'

apply from: "${rootDir}/gradle/java.gradle"
apply from: "${rootDir}/gradle/publish.gradle"

minimumBranchCoverage = 0.5
minimumInstructionCoverage = 0.6
excludedClassesCoverage += [
  'datadog.trace.common.writer.ListWriter',
  'datadog.trace.common.writer.LoggingWriter',
  'datadog.trace.common.writer.DDAgentWriter.DDAgentWriterBuilder',
  'datadog.trace.common.sampling.PrioritySampling',
  // This code is copied from okHttp samples and we have integration tests to verify that it works.
  'datadog.trace.common.writer.unixdomainsockets.TunnelingUnixSocket',
  'datadog.trace.common.writer.unixdomainsockets.UnixDomainSocketFactory',
  'datadog.opentracing.StringCachingBigInteger'
]

apply plugin: 'org.unbroken-dome.test-sets'

testSets {
  ot31CompatabilityTest
  ot33CompatabilityTest
  traceAgentTest
}

dependencies {
  annotationProcessor deps.autoservice
  implementation deps.autoservice

  compile project(':dd-trace-api')
  compile project(':utils:thread-utils')

  compile deps.opentracing
  compile group: 'io.opentracing.contrib', name: 'opentracing-tracerresolver', version: '0.1.0'

  compile group: 'com.datadoghq', name: 'java-dogstatsd-client', version: '2.1.1'

  compile deps.slf4j
  compile deps.okhttp
  compile group: 'org.msgpack', name: 'msgpack-core', version: '0.8.20'
  compile group: 'com.squareup.moshi', name: 'moshi', version: '1.9.2'
  compile group: 'com.github.jnr', name: 'jnr-unixsocket', version: '0.23'
  compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'

  // We have autoservices defined in test subtree, looks like we need this to be able to properly rebuild this
  testAnnotationProcessor deps.autoservice
  testImplementation deps.autoservice

  testCompile project(":dd-java-agent:testing")
  testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.19.0'
  testCompile group: 'org.msgpack', name: 'jackson-dataformat-msgpack', version: '0.8.20'

  traceAgentTestCompile deps.testcontainers

  ot31CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-api', version: '0.31.0'
  ot31CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'
  ot31CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-noop', version: '0.31.0'

  ot33CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-api', version: '0.33.0'
  ot33CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.33.0'
  ot33CompatabilityTestCompile group: 'io.opentracing', name: 'opentracing-noop', version: '0.33.0'
}

[configurations.ot31CompatabilityTestCompile, configurations.ot31CompatabilityTestRuntime].each {
  it.resolutionStrategy {
    force group: 'io.opentracing', name: 'opentracing-api', version: '0.31.0'
    force group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'
    force group: 'io.opentracing', name: 'opentracing-noop', version: '0.31.0'
  }
}
[configurations.ot33CompatabilityTestCompile, configurations.ot33CompatabilityTestRuntime].each {
  it.resolutionStrategy {
    force group: 'io.opentracing', name: 'opentracing-api', version: '0.33.0'
    force group: 'io.opentracing', name: 'opentracing-util', version: '0.33.0'
    force group: 'io.opentracing', name: 'opentracing-noop', version: '0.33.0'
  }
}

test.finalizedBy ot31CompatabilityTest
test.finalizedBy ot33CompatabilityTest

jar {
  archiveClassifier = 'unbundled'
}

shadowJar {
  archiveClassifier = ''
}
